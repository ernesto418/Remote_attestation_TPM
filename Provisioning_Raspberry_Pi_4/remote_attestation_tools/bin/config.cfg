auth = {
    server = "https://10.129.144.12";
    username = "infineon";
    password = "password";
};

# ak.pub -> "tpm2_readpublic -c 0x81000003 -o ak.pub"
# ek.crt -> "tpm2_nvread 0x1c00002 -s 1184 --offset 0 -o ek.crt"
# pcr -> "tpm2_pcrread -o pcr"
# sha1pcrs = [23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0];
# sha2pcrs = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];
# it is used for a one-used key, it is not needed to be random
attune = {
    sha1pcrs = [10];
    sha2pcrs = [10];
    file_ekCrt = "./ek.crt";
    file_akPub = "./ak.pub";
    file_pcrs = "./pcr";
    file_imaTemplate = "./binary_runtime_measurements";
};

#iv is for a one-use key, therefore, it can be repeated
KCV = {
    file_secretkey = "./AESkey.bin"; 
    iv = "ZW5jcnlwdGlvbkludFZlYw==";
    file_ciphertext = "./AuthPuK_encrypted.b64";
    file_SeKcert = "./SeKcert.out";
    file_certSig = "./certSig.out";
    file_Sekpub = "./SeK.pub";
};



CSR = {
    file_signature = "./ucsr.sign";
};


atelic = {
}

# qualification -> "./atelic" *check README.md if credential is used
# quote+sig -> "tpm2_quote -c key.ctx -q [qualification] -l sha1:10+sha256:10 -m quote -s sig"
attest = {
    file_quote = "./quote";
    file_sig = "./sig";
    file_imaTemplate = "./binary_runtime_measurements";
}
